#!/bin/sh
### ### ### lxc-to-go // ### ### ###

run(){
   # execute commands inside the lxc template
   lxc-attach -n "$LXCCREATENAME" -- "$@"
}

check(){
   # check state
   if [ $? -eq 0 ]
   then
      printf "\033[1;32m OK \033[0m\n"
      sleep 2
   else
      printf "\033[1;31m FAILED \033[0m\n"
      sleep 1
      exit 1
   fi
}

lull(){
   # break
   sleep 4
   echo ""
   echo "---> next step: "$@" <---"
   echo ""
}

echo "<--- --- --- provisioning hooks // --- --- --->"

#/ version: 1 for 0.10

### LXC Config // ###
echo "### video & sound support // ###" >> /var/lib/lxc/"$LXCCREATENAME"/config
echo "lxc.mount.entry = /dev/dri dev/dri none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config
echo "lxc.mount.entry = /dev/snd dev/snd none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config
echo "lxc.mount.entry = /dev/video0 dev/video0 none bind,optional,create=file" >> /var/lib/lxc/"$LXCCREATENAME"/config
echo "#/lxc.mount.entry = /tmp/.X11-unix tmp/.X11-unix none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config
echo "# WORKAROUND: against systemd-tmpfiles-clean and X clean" >> /var/lib/lxc/"$LXCCREATENAME"/config
echo "lxc.mount.entry = /tmp/.X11-unix tmp_HOST/.X11-unix none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config
echo "### // video & sound support ###" >> /var/lib/lxc/"$LXCCREATENAME"/config
### // LXC Config ###

run apt-get -y update; check
run /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y upgrade"; check
run /bin/sh -c ' echo "$LXCCREATENAME   127.0.0.1" >> /etc/hosts '; check

lull 1

run apt-get -y install sudo; check
run apt-get -y install telnet; check
run apt-get -y install curl; check
run apt-get -y install wget; check
run apt-get -y install vim; check
run apt-get -y install git; check
run apt-get -y install make; check
run apt-get -y install gcc; check
run apt-get -y install build-essential; check
#/run apt-get -y install wordnet; check
#/run apt-get -y install memcached; check
run apt-get -y install cpanminus; check
run apt-get -y install libssl-dev; check
run apt-get -y install libio-pty-perl; check
run curl -L https://cpanmin.us | perl - -M https://cpan.metacpan.org -n Mojolicious; check
run apt-get -y install xprintidle; check

### old repo
#/run apt-get -y install elasticsearch; check
run /bin/sh -c ' cd /root; wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add - '; check
run /bin/sh -c ' echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" | sudo tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list '; check
run apt-get -y update; check
run apt-get -y install openjdk-7-jre; check
run apt-get -y install elasticsearch; check

lull 2

run systemctl enable elasticsearch; check
run systemctl restart elasticsearch; check

lull 3

#/run update-rc.d elasticsearch defaults 95 10; check
#/run /usr/share/elasticsearch/bin/plugin -install lmenezes/elasticsearch-kopf; check
run mkdir -p /usr/share/elasticsearch/data; check
run chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data; check
run touch /var/run/elasticsearch.pid; check
run chown elasticsearch:elasticsearch /var/run/elasticsearch.pid; check

lull 4

run cpanm IO::Socket::SSL; check

#/run cpanm Flower
run cpanm --reinstall Flower
#/run cpanm Flower>0.09

#/run cpanm Flower::Chronos; check
#/run cpanm Flower::Chronos::Application::Base; check
#/run cpanm Flower::Chronos::Application::Chromium; check
#/run cpanm Flower::Chronos::Application::Firefox; check
#/run cpanm Flower::Chronos::Application::GnomeTerminal; check
#/run cpanm Flower::Chronos::Application::GoogleChrome; check
#/run cpanm Flower::Chronos::Application::Pidgin; check
#/run cpanm Flower::Chronos::Application::Skype; check
#/run cpanm Flower::Chronos::Application::Thunderbird; check
#/run cpanm Flower::Chronos::Logger; check
#/run cpanm Flower::Chronos::Logger::Base; check
#/run cpanm Flower::Chronos::Logger::Stdout; check
#/run cpanm Flower::Chronos::Report; check
#/run cpanm Flower::Chronos::Tracker; check
#/run cpanm Flower::Chronos::Utils; check
#/run cpanm Flower::Chronos::X11; check
#/run cpanm Flower::File; check
#/run cpanm Flower::Files; check
#/run cpanm Flower::Interface; check
#/run cpanm Flower::Node; check
#/run cpanm Flower::Nodes; check
#/run cpanm Flower::Rest; check
#/run cpanm Flower::Upload; check

lull 5

# X11
run /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y install xorg"; check

# Applications
run apt-get -y install chromium; check
run apt-get -y install iceweasel; check

lull 6

#/ --- flower --- #/

run mkdir -p /data; check

# GETIPV4PORTINSIDE=$(run cat /root/PORT)
# sed -i 's/2222/'"$GETIPV4PORTINSIDE"'/g' /var/lib/lxc/"$LXCCREATENAME"/rootfs/root/flower/script/perl_peer

/bin/cat << "RCLOCAL" > /var/lib/lxc/"$LXCCREATENAME"/rootfs/etc/rc.local
#!/bin/sh
### ### ### lxc-to-go // ### ### ###

# WORKAROUND: against systemd-tmpfiles-clean and X clean
mount --bind /tmp_HOST/.X11-unix /tmp/.X11-unix
export DISPLAY=:0

### # elasticsearch
### #/sudo -u elasticsearch /usr/share/elasticsearch/bin/elasticsearch -d -p /var/run/elasticsearch.pid --default.config=/etc/elasticsearch/elasticsearch.yml --default.path.home=/usr/share/elasticsearch --default.path.logs=/var/log/elasticsearch --default.path.data=/var/lib/elasticsearch --default.path.work=/tmp/elasticsearch --default.path.conf=/etc/elasticsearch

# /usr/local/bin/flower --filepath /data --ip $GETIPV4NEWINSIDE &
GETFLOWERPATH=$(find /root -name "flower" | grep "bin/flower" | egrep -v "script" | head -n 1 | sed 's/\/bin\/flower//g')
GETIPV4NEWINSIDE=$(ifconfig eth0 | grep 'inet ' | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -n 1)
/bin/sh -c " cd '"$GETFLOWERPATH"'; ./bin/flower --filepath /data --ip '"$GETIPV4NEWINSIDE"' & "

exit 0
### ### ### // lxc-to-go ### ### ###
# EOF
RCLOCAL
check

lull 7

#run /etc/rc.local; check

run /bin/sh -c ' echo "### ### ### lxc-to-go // ### ### ###" >> /etc/elasticsearch/elasticsearch.yml '; check
run /bin/sh -c ' echo "network.bind_host: 0.0.0.0" >> /etc/elasticsearch/elasticsearch.yml '; check
run /bin/sh -c ' echo "transport.tcp.port: 9300" >> /etc/elasticsearch/elasticsearch.yml '; check
run /bin/sh -c ' echo "http.port: 9200" >> /etc/elasticsearch/elasticsearch.yml '; check
run /bin/sh -c ' echo "### ### ### // lxc-to-go ### ### ###" >> /etc/elasticsearch/elasticsearch.yml '; check

lull 8

#/ force reboot for lxc.mount changes
#run poweroff
printf "\033[1;33m Please Reboot your LXC Container! \033[0m\n"

echo "<--- --- --- // provisioning hooks --- --- --->"
### ### ### // lxc-to-go ### ### ###
# EOF
