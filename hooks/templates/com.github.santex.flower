#!/bin/sh
### ### ### lxc-to-go // ### ### ###

run(){
   # execute commands inside the lxc template
   lxc-attach -n "$LXCCREATENAME" -- "$@"
}

lull(){
   # break
   sleep 2
   echo ""
   echo "---> next step <---"
   echo ""
}

echo "<--- --- --- provisioning hooks // --- --- --->"
(

#/ version: 1 for 0.10

run apt-get -y update
run /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y upgrade"

lull

run apt-get -y install curl
run apt-get -y install vim
run apt-get -y install git
run apt-get -y install make
run apt-get -y install gcc
run apt-get -y install build-essential
run apt-get -y install wordnet
run apt-get -y install memcached
run apt-get -y install cpanminus
run apt-get -y install libssl-dev
run apt-get -y install libio-pty-perl
run curl -L https://cpanmin.us | perl - -M https://cpan.metacpan.org -n Mojolicious
run apt-get -y install elasticsearch

lull

run cpanm Flower::Chronos;
run cpanm Flower::Chronos::Application::Base;
run cpanm Flower::Chronos::Application::Chromium;
run cpanm Flower::Chronos::Application::Firefox;
run cpanm Flower::Chronos::Application::GnomeTerminal;
run cpanm Flower::Chronos::Application::GoogleChrome;
run cpanm Flower::Chronos::Application::Pidgin;
run cpanm Flower::Chronos::Application::Skype;
run cpanm Flower::Chronos::Application::Thunderbird;
run cpanm Flower::Chronos::Logger;
run cpanm Flower::Chronos::Logger::Base;
run cpanm Flower::Chronos::Logger::Stdout;
run cpanm Flower::Chronos::Report;
run cpanm Flower::Chronos::Tracker;
run cpanm Flower::Chronos::Utils;
run cpanm Flower::Chronos::X11;
run cpanm Flower::File;
run cpanm Flower::Files;
run cpanm Flower::Interface;
run cpanm Flower::Node;
run cpanm Flower::Nodes;
run cpanm Flower::Rest;
run cpanm Flower::Upload;

lull

)

#/ --- flower --- #/
# run cpanm Data::UUID;
# run cpanm Time::Duration;
# run cpanm Test::MonkeyMock;
# run git clone https://github.com/santex/flower.git
# run /bin/sh -c "cd /root/flower && perl Makefile.PL && make && make test && make install"
# run mkdir -p /root/data

# GETIPV4PORTINSIDE=$(run cat /root/PORT)
# sed -i 's/2222/'"$GETIPV4PORTINSIDE"'/g' /var/lib/lxc/"$LXCCREATENAME"/rootfs/root/flower/script/perl_peer

/bin/cat <<"RCLOCAL" > /var/lib/lxc/"$LXCCREATENAME"/rootfs/etc/rc.local
#!/bin/sh
### ### ### lxc-to-go // ### ### ###

# /bin/sh -c "cd /root/flower && git pull"
# GETIPV4NEWINSIDE=$(ifconfig eth0 | grep 'inet ' | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -n 1)
# /bin/sh -c "cd /root/flower && nohup perl -I /root/flower/script /root/flower/script/perl_peer --filepath /root/data --ip $GETIPV4NEWINSIDE &"

exit 0
### ### ### // lxc-to-go ### ### ###
# EOF
RCLOCAL

# GETIPV4INSIDE=$(lxc-ls --active --fancy | grep "RUNNING" | grep "$LXCCREATENAME" | awk '{print $3}' | egrep -v "-")
# run /bin/sh -c "cd /root/flower && nohup perl -I /root/flower/script /root/flower/script/perl_peer --filepath /root/data --ip $GETIPV4INSIDE &"
#
# lull
#
# run tail -n 50 /root/flower/nohup.out

echo "<--- --- --- // provisioning hooks --- --- --->"
### ### ### // lxc-to-go ### ### ###
# EOF
