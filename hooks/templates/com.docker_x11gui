#!/bin/sh
### ### ### lxc-to-go // ### ### ###
#// version: 1.0

# include functions
. /etc/lxc-to-go/template.func.sh

echo "<--- --- --- provisioning hooks // --- --- --->"
#// version: 1.0

### LXC Config // ###
#// for LXC
echo "### video & sound support // ###" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 1
echo "lxc.mount.entry = /dev/dri dev/dri none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 2
echo "lxc.mount.entry = /dev/snd dev/snd none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 3
echo "lxc.mount.entry = /dev/video0 dev/video0 none bind,optional,create=file" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 4
echo "#/lxc.mount.entry = /tmp/.X11-unix tmp/.X11-unix none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 5
echo "# WORKAROUND: against systemd-tmpfiles-clean and X clean" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 6
echo "lxc.mount.entry = /tmp/.X11-unix tmp_HOST/.X11-unix none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 7
echo "### // video & sound support ###" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 8
#// for Docker
###lxc.cgroup.devices.allow = a
sed -i '/lxc.cgroup/d' /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set less secure capabilities for docker - stage 1
sed -i '/lxc.cap.drop = sys_pacct/d' /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set less secure capabilities for docker - stage 2
sed -i '/lxc.cap.drop = sys_rawio/d' /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set less secure capabilities for docker - stage 3
sed -i '/lxc.cap.drop = sys_tty_config/d' /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set less secure capabilities for docker - stage 4
### // LXC Config ###

DEBVERSIONX=$(RUN grep -s "VERSION_ID" /etc/os-release | sed 's/VERSION_ID=//g' | sed 's/"//g')

RUN apt-get -y update; CHECK LXC: apt-get update
RUN /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y upgrade"; CHECK LXC: apt-get upgrade

LOL 1

#// Users
RUN apt-get -y install zsh; CHECK LXC: installing zsh
RUN useradd -m -c "lxc-to-go" lxc-to-go; CHECK LXC: create user lxc-to-go
RUN /bin/sh -c ' echo lxc-to-go:lxc-to-go | chpasswd '; CHECK LXC: set up lxc-to-go password
RUN chsh -s /usr/bin/zsh lxc-to-go; CHECK LXC: configure zsh as default lxc-to-go shell

LOL 2

#// X11
RUN /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y install xorg"; CHECK LXC: installing xorg

LOL 3

/bin/cat << "RCLOCAL" > /var/lib/lxc/"$LXCCREATENAME"/rootfs/etc/rc.local
#!/bin/sh
### ### ### lxc-to-go // ### ### ###

# WORKAROUND: against systemd-tmpfiles-clean and X clean
mount --bind /tmp_HOST/.X11-unix /tmp/.X11-unix
export DISPLAY=:0

### ### ### // lxc-to-go ### ### ###
exit 0
# EOF
RCLOCAL
CHECK LXC: configure rc.local

LOL 4

#// Pulseaudio
RUN apt-get -y install pulseaudio; CHECK LXC: installing pulseaudio
echo "lxc.hook.pre-start = /var/lib/lxc/$LXCCREATENAME/pulseaudio-helper.sh" >> /var/lib/lxc/"$LXCCREATENAME"/config

/bin/cat << "RCPULSEAUDIO" > /var/lib/lxc/"$LXCCREATENAME"/pulseaudio-helper.sh
#!/bin/sh
### ### ### lxc-to-go // ### ### ###

PULSE_PATH=/var/lib/lxc/CHANGEME/rootfs/home/lxc-to-go/.pulse_socket

if [ ! -e "$PULSE_PATH" ] || [ -z "$(lsof -n $PULSE_PATH 2>&1)" ]; then
   pactl load-module module-native-protocol-unix auth-anonymous=1 \
   socket=$PULSE_PATH
fi

### ### ### // lxc-to-go ### ### ###
exit 0
# EOF
RCPULSEAUDIO
CHECK LXC: configure pulseaudio-helper.sh - stage 1

sed -i 's/CHANGEME/'"$LXCCREATENAME"'/g' /var/lib/lxc/"$LXCCREATENAME"/pulseaudio-helper.sh; CHECK LXC: configure pulseaudio-helper.sh - stage 2
chmod 0755 /var/lib/lxc/"$LXCCREATENAME"/pulseaudio-helper.sh; CHECK LXC: configure pulseaudio-helper.sh - stage 3
touch /var/lib/lxc/"$LXCCREATENAME"/rootfs/home/lxc-to-go/.pulse_socket; CHECK LXC: configure pulseaudio-helper.sh - stage 4
chown 1000:1000 /var/lib/lxc/"$LXCCREATENAME"/rootfs/home/lxc-to-go/.pulse_socket; CHECK LXC: configure pulseaudio-helper.sh - stage 5
RUN /bin/sh -c ' usermod -a -G audio lxc-to-go '; CHECK LXC: configure pulseaudio-helper.sh - stage 6

LOL 5

#// add the docker repository
RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D; CHECK LXC: add the docker repository key

LOL 6

if [ "$DEBVERSIONX" = "7" ]
then
   RUN /bin/sh -c ' echo "deb https://apt.dockerproject.org/repo debian-wheezy main" > /etc/apt/sources.list.d/docker.list '; CHECK LXC: add the docker repository
fi
if [ "$DEBVERSIONX" = "8" ]
then
   RUN /bin/sh -c ' echo "deb https://apt.dockerproject.org/repo debian-jessie main" > /etc/apt/sources.list.d/docker.list '; CHECK LXC: add the docker repository
fi

RUN apt-get -y install apt-transport-https; CHECK LXC: installing apt-transport-https
RUN apt-get -y update; CHECK LXC: apt-get update

#// verify the new docker repository
RUN apt-get -y upgrade; CHECK LXC: apt-get upgrade
RUN apt-cache policy docker-engine; CHECK LXC: verify the new docker repository

LOL 7

#// installing docker
RUN apt-get -y install docker-engine; CHECK LXC: installing docker
RUN service docker start; CHECK LXC: starting docker service

if [ "$DEBVERSIONX" = "8" ]
then
   RUN systemctl enable docker; CHECK LXC: enable docker service
fi

LOL 8

#// docker test
#RUN docker run hello-world; CHECK LXC: testing docker

LOL 9

#// configure docker
RUN /bin/sh -c ' echo "### lxc-to-go // ###" >> /etc/default/docker '; CHECK LXC: change the docker configuration - stage 1
RUN /bin/sh -c ' echo "DOCKER_OPTS=\"-e lxc -G lxc-to-go --ipv6=true\"" >> /etc/default/docker '; CHECK LXC: change the docker configuration - stage 2
RUN /bin/sh -c ' echo "### // lxc-to-go ###" >> /etc/default/docker '; CHECK LXC: change the docker configuration - stage 3

#// configure systemd unit
RUN sed -i 's/fd:\/\//fd:\/\/ $DOCKER_OPTS/g' /lib/systemd/system/docker.service; CHECK LXC: change the docker systemd unit

LOL 10

#/ force reboot for lxc.mount changes
#/RUN poweroff
printf "\033[1;33m Please Reboot your LXC Container! \033[0m\n"
echo "Try an Docker Test with: docker run hello-world" # dummy
echo "" # dummy

echo "<--- --- --- // provisioning hooks --- --- --->"
### ### ### // lxc-to-go ### ### ###
# EOF
