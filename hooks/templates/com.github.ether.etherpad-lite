#!/bin/sh
### ### ### lxc-to-go // ### ### ###

run(){
   # execute commands inside the lxc template
   lxc-attach -n "$LXCCREATENAME" -- "$@"
}

check(){
   # check state
   if [ $? -eq 0 ]
   then
      printf "\033[1;32m OK \033[0m\n"
      sleep 2
   else
      printf "\033[1;31m FAILED \033[0m\n"
      sleep 1
      exit 1
   fi
}

lull(){
   # break
   sleep 4
   echo ""
   echo "---> next step: "$@" <---"
   echo ""
}

spinner(){
   # spinner
   local pid=$1
   local delay=0.01
   local spinstr='|/-\'
   while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
         local temp=${spinstr#?}
         printf " [%c]  " "$spinstr"
         local spinstr=$temp${spinstr%"$temp"}
         sleep $delay
         printf "\b\b\b\b\b\b"
   done
   printf "    \b\b\b\b"
}

echo "<--- --- --- provisioning hooks // --- --- --->"
#// Version: 2.0

run apt-get -y update; check
run /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y upgrade"; check

lull 1

run apt-get -y install screen; check
run apt-get -y install vim; check
run apt-get -y install gzip git curl python libssl-dev pkg-config build-essential; check

#// for AMD64 or PowerPC Environment
CHECKYABOOT01=$(/usr/bin/dpkg -l | grep yaboot | awk '{print $2}')
if [ -z "$CHECKYABOOT01" ]
then
   #// amd64
   run apt-get -y install nodejs npm; check
else
   #// powerpc
   #run /bin/sh -c ' cd /root; git clone git://github.com/nodejs/node; cd /root/node; ./configure; make install '; check
   run /bin/sh -c ' cd /root; git clone git://github.com/andrewlow/v8ppc.git; cd /root/v8ppc; ./configure; make install '; check
   run /bin/sh -c ' cd /root; git clone git://github.com/andrewlow/node.git; cd /root/node; ./configure; make install '; check
   run apt-get -y install npm; check
fi
check

### FIX // ###
run ln -s /usr/bin/nodejs /usr/bin/node; check
### // FIX ###

lull 2

#/ --- etherpad-lite --- #/

run /bin/sh -c ' cd /root; git clone git://github.com/ether/etherpad-lite.git '; check

lull 3

#/ run /bin/sh -c ' screen -d -m -S etherpad -- /root/etherpad-lite/bin/run.sh --root '
#/ run /bin/sh -c "exec >/dev/tty 2>/dev/tty </dev/tty && /usr/bin/screen -d -m -S etherpad -- /root/etherpad-lite/bin/run.sh --root"
#/ run /bin/sh -c ' su -m etherpad -c "screen -d -m -S etherpad -- /lxc-to-go/etherpad-lite/bin/run.sh" '

run useradd etherpad-lite; check
run mkdir -p /lxc-to-go; check
run mv -f /root/etherpad-lite /lxc-to-go; check
run chown -R etherpad-lite:etherpad-lite /lxc-to-go; check

#/ --- configuration --- #/

DEBVERSION=$(run grep -s "VERSION_ID" /etc/os-release | sed 's/VERSION_ID=//g' | sed 's/"//g')
if [ "$DEBVERSION" = "7" ]; then
   : # dummy
fi
if [ "$DEBVERSION" = "8" ]; then
   #// systemd service file
   run /bin/sh -c ' echo "### ### ### lxc-to-go // ### ### ###" > /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "[Unit]" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "Description=Run Etherpad-lite, the collaborative editor." >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "After=syslog.target network.target" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "[Service]" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "Type=simple" >> /lib/systemd/system/etherpad-lite.service '; check
   #/run /bin/sh -c ' echo "ExecStart=/bin/su -m etherpad-lite -c \"/lxc-to-go/etherpad-lite/bin/run.sh 2>$1 < /dev/null &\"" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "ExecStart=/lxc-to-go/etherpad-lite/bin/run.sh --root 2>$1 < /dev/null &" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "[Install]" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "WantedBy=multi-user.target" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "### ### ### // lxc-to-go ### ### ###" >> /lib/systemd/system/etherpad-lite.service '; check
   run /bin/sh -c ' echo "# EOF" >> /lib/systemd/system/etherpad-lite.service '; check
lull 4
   run systemctl enable etherpad-lite.service; check
   run systemctl start etherpad-lite.service; check
   echo "" # dummy
   echo "... starting etherpad-lite.service ..."
   echo "" # dummy
   (sleep 120) & spinner $!
lull 5
   run systemctl status etherpad-lite.service; check
fi

#/ --- info --- #/

GETHOSTIP4=$(ip addr show vswitch0 | grep 'inet ' | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -n 1)
GETIPV4PORTINSIDE=$(run cat /root/PORT)
echo ""
echo "IP:               $GETHOSTIP4"
echo "Port:             $GETIPV4PORTINSIDE"
echo ""

echo "<--- --- --- // provisioning hooks --- --- --->"
### ### ### // lxc-to-go ### ### ###
# EOF
