#!/bin/sh
### ### ### lxc-to-go // ### ### ###
#// version: 1.0

# include functions
. /etc/lxc-to-go/template.func.sh

echo "<--- --- --- provisioning hooks // --- --- --->"
#// version: 1.0

### LXC Config // ###
#// for LXC
echo "### video & sound support // ###" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 1
echo "lxc.mount.entry = /dev/dri dev/dri none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 2
echo "lxc.mount.entry = /dev/snd dev/snd none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 3
#// risky
echo "lxc.mount.entry = /dev/fb0 dev/fb0 none bind,optional,create=file" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 4
#
if [ -e "/dev/video0" ]
then
   echo "lxc.mount.entry = /dev/video0 dev/video0 none bind,optional,create=file" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 4.1
fi
if [ -e "/dev/agpgart" ]
then
   echo "lxc.mount.entry = /dev/agpgart dev/agpgart none bind,optional,create=file" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 4.2
fi
if [ -e "/dev/nvidia0" ]
then
   echo "lxc.mount.entry = /dev/nvidia0 dev/nvidia0 none bind,optional,create=file" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 4.3
fi
if [ -e "/dev/nvidiactl" ]
then
   echo "lxc.mount.entry = /dev/nvidiactl dev/nvidiactl none bind,optional,create=file" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 4.4
fi
echo "#/lxc.mount.entry = /tmp/.X11-unix tmp/.X11-unix none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 5
echo "# WORKAROUND: against systemd-tmpfiles-clean and X clean" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 6
echo "lxc.mount.entry = /tmp/.X11-unix tmp_HOST/.X11-unix none bind,optional,create=dir" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 7
echo "### // video & sound support ###" >> /var/lib/lxc/"$LXCCREATENAME"/config; CHECK LXC: set up lxc audio and video support - stage 8
### // LXC Config ###

RUN apt-get -y update; CHECK LXC: apt-get update
RUN /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y upgrade"; CHECK LXC: apt-get upgrade

LOL 1

#// Users
RUN apt-get -y install zsh; CHECK LXC: installing zsh
RUN useradd -m -c "lxc-to-go" lxc-to-go; CHECK LXC: create user lxc-to-go
RUN /bin/sh -c ' echo lxc-to-go:lxc-to-go | chpasswd '; CHECK LXC: set up lxc-to-go password
RUN chsh -s /usr/bin/zsh lxc-to-go; CHECK LXC: configure zsh as default lxc-to-go shell
#// Users - extra
RUN usermod -a -G video,audio lxc-to-go; CHECK LXC: add user lxc-to-go to group video and audio

LOL 2

#// X11
RUN /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y install xorg"; CHECK LXC: installing xorg

LOL 3

/bin/cat << "RCLOCAL" > /var/lib/lxc/"$LXCCREATENAME"/rootfs/etc/rc.local
#!/bin/sh
### ### ### lxc-to-go // ### ### ###

# WORKAROUND: against systemd-tmpfiles-clean and X clean
mount --bind /tmp_HOST/.X11-unix /tmp/.X11-unix
export DISPLAY=:0

### ### ### // lxc-to-go ### ### ###
exit 0
# EOF
RCLOCAL
CHECK LXC: configure rc.local

LOL 4

#// Pulseaudio
RUN apt-get -y install pulseaudio; CHECK LXC: installing pulseaudio
echo "lxc.hook.pre-start = /var/lib/lxc/$LXCCREATENAME/pulseaudio-helper.sh" >> /var/lib/lxc/"$LXCCREATENAME"/config

/bin/cat << "RCPULSEAUDIO" > /var/lib/lxc/"$LXCCREATENAME"/pulseaudio-helper.sh
#!/bin/sh
### ### ### lxc-to-go // ### ### ###

PULSE_PATH=/var/lib/lxc/CHANGEME/rootfs/home/lxc-to-go/.pulse_socket

if [ ! -e "$PULSE_PATH" ] || [ -z "$(lsof -n $PULSE_PATH 2>&1)" ]; then
   pactl load-module module-native-protocol-unix auth-anonymous=1 \
   socket=$PULSE_PATH
fi

### ### ### // lxc-to-go ### ### ###
exit 0
# EOF
RCPULSEAUDIO
CHECK LXC: configure pulseaudio-helper.sh - stage 1

sed -i 's/CHANGEME/'"$LXCCREATENAME"'/g' /var/lib/lxc/"$LXCCREATENAME"/pulseaudio-helper.sh; CHECK LXC: configure pulseaudio-helper.sh - stage 2
chmod 0755 /var/lib/lxc/"$LXCCREATENAME"/pulseaudio-helper.sh; CHECK LXC: configure pulseaudio-helper.sh - stage 3
touch /var/lib/lxc/"$LXCCREATENAME"/rootfs/home/lxc-to-go/.pulse_socket; CHECK LXC: configure pulseaudio-helper.sh - stage 4
chown 1000:1000 /var/lib/lxc/"$LXCCREATENAME"/rootfs/home/lxc-to-go/.pulse_socket; CHECK LXC: configure pulseaudio-helper.sh - stage 5
RUN /bin/sh -c ' usermod -a -G audio lxc-to-go '; CHECK LXC: configure pulseaudio-helper.sh - stage 6

LOL 5

#// Driver Packages
if [ -e "/dev/nvidia0" ]
then
   RUN /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y install nvidia-driver mesa-utils"; CHECK LXC: installing driver packages - stage 1.0
fi
if [ -e "/usr/sbin/bumblebeed" ]
then
   RUN /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y install bumblebee-nvidia nvidia-driver mesa-utils"; CHECK LXC: installing driver packages - stage 1.1
fi

LOL 6

#// Aptitude
RUN /bin/sh -c "DEBIAN_FRONTEND=noninteractive apt-get -y install aptitude"; CHECK LXC: installing aptitude

LOL 7

#// Steam
CHECKMACHINETYPE=$(uname -m)
if [ "$CHECKMACHINETYPE" = "x86_64" ]
then
   RUN dpkg --add-architecture i386; CHECK LXC: activate arch i386 support
   RUN aptitude update; CHECK LXC: aptitude update
   RUN aptitude install steam; CHECK LXC: installing steam
   if [ -e "/dev/nvidia0" ]
   then
      RUN aptitude install libgl1-nvidia-glx:i386; CHECK LXC: installing 32-bit opengl library
   fi
fi
if [ "$CHECKMACHINETYPE" = "i686" ]
then
   RUN aptitude update; CHECK LXC: aptitude update
   RUN aptitude install steam; CHECK LXC: installing steam
fi

LOL 8

#/ force reboot for lxc.mount changes
#/RUN poweroff
printf "\033[1;33m Please Reboot your LXC Container! \033[0m\n"
echo "" # dummy

echo "<--- --- --- // provisioning hooks --- --- --->"
### ### ### // lxc-to-go ### ### ###
# EOF
